# demographics { #starsim.demographics }

`demographics`

Define pregnancy, deaths, migration, etc.

## Classes

| Name | Description |
| --- | --- |
| [Births](#starsim.demographics.Births) | Create births based on rates, rather than based on pregnancy |
| [Demographics](#starsim.demographics.Demographics) | A demographic module typically handles births/deaths/migration and takes |
| [Pregnancy](#starsim.demographics.Pregnancy) | Create births via pregnancies |

### Births { #starsim.demographics.Births }

```python
demographics.Births(self, pars=None, metadata=None, **kwargs)
```

Create births based on rates, rather than based on pregnancy

#### Methods

| Name | Description |
| --- | --- |
| [add_births](#starsim.demographics.Births.add_births) | Add n_new births to each state in the sim |
| [get_births](#starsim.demographics.Births.get_births) | Extract the right birth rates to use and translate it into a number of people to add. |
| [init_pre](#starsim.demographics.Births.init_pre) | Initialize with sim information |
| [standardize_birth_data](#starsim.demographics.Births.standardize_birth_data) | Standardize/validate birth rates - handled in an external file due to shared functionality |

##### add_births { #starsim.demographics.Births.add_births }

```python
demographics.Births.add_births()
```

Add n_new births to each state in the sim

##### get_births { #starsim.demographics.Births.get_births }

```python
demographics.Births.get_births()
```

Extract the right birth rates to use and translate it into a number of people to add.

##### init_pre { #starsim.demographics.Births.init_pre }

```python
demographics.Births.init_pre(sim)
```

Initialize with sim information

##### standardize_birth_data { #starsim.demographics.Births.standardize_birth_data }

```python
demographics.Births.standardize_birth_data()
```

Standardize/validate birth rates - handled in an external file due to shared functionality

### Demographics { #starsim.demographics.Demographics }

```python
demographics.Demographics(self, name=None, label=None, **kwargs)
```

A demographic module typically handles births/deaths/migration and takes
place at the start of the timestep, before networks are updated and before
any disease modules are executed.

### Pregnancy { #starsim.demographics.Pregnancy }

```python
demographics.Pregnancy(self, pars=None, metadata=None, **kwargs)
```

Create births via pregnancies

#### Methods

| Name | Description |
| --- | --- |
| [do_step](#starsim.demographics.Pregnancy.do_step) | Perform all updates |
| [init_results](#starsim.demographics.Pregnancy.init_results) | Results could include a range of birth outcomes e.g. LGA, stillbirths, etc. |
| [make_embryos](#starsim.demographics.Pregnancy.make_embryos) | Add properties for the just-conceived |
| [make_fertility_prob_fn](#starsim.demographics.Pregnancy.make_fertility_prob_fn) | Take in the module, sim, and uids, and return the conception probability for each UID on this timestep |
| [make_pregnancies](#starsim.demographics.Pregnancy.make_pregnancies) | Select people to make pregnant using incidence data |
| [set_prognoses](#starsim.demographics.Pregnancy.set_prognoses) | Make pregnancies |
| [standardize_fertility_data](#starsim.demographics.Pregnancy.standardize_fertility_data) | Standardize/validate fertility rates |
| [update_states](#starsim.demographics.Pregnancy.update_states) | Update states |

##### do_step { #starsim.demographics.Pregnancy.do_step }

```python
demographics.Pregnancy.do_step()
```

Perform all updates

##### init_results { #starsim.demographics.Pregnancy.init_results }

```python
demographics.Pregnancy.init_results()
```

Results could include a range of birth outcomes e.g. LGA, stillbirths, etc.
Still unclear whether this logic should live in the pregnancy module, the
individual disease modules, the connectors, or the sim.

##### make_embryos { #starsim.demographics.Pregnancy.make_embryos }

```python
demographics.Pregnancy.make_embryos(conceive_uids)
```

Add properties for the just-conceived

##### make_fertility_prob_fn { #starsim.demographics.Pregnancy.make_fertility_prob_fn }

```python
demographics.Pregnancy.make_fertility_prob_fn(sim, uids)
```

Take in the module, sim, and uids, and return the conception probability for each UID on this timestep

##### make_pregnancies { #starsim.demographics.Pregnancy.make_pregnancies }

```python
demographics.Pregnancy.make_pregnancies()
```

Select people to make pregnant using incidence data

##### set_prognoses { #starsim.demographics.Pregnancy.set_prognoses }

```python
demographics.Pregnancy.set_prognoses(uids)
```

Make pregnancies
Add miscarriage/termination logic here
Also reconciliation with birth rates
Q, is this also a good place to check for other conditions and set prognoses for the fetus?

##### standardize_fertility_data { #starsim.demographics.Pregnancy.standardize_fertility_data }

```python
demographics.Pregnancy.standardize_fertility_data()
```

Standardize/validate fertility rates

##### update_states { #starsim.demographics.Pregnancy.update_states }

```python
demographics.Pregnancy.update_states()
```

Update states